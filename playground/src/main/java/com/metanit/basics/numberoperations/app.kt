package com.metanit.basics.numberoperations

fun main() {
    // Арифметические операции
    // Смотри Java
    val x = 5
    val y = 6
    var z = x + y   // сложение
    z = x * y       // умножение
                    // и т.д.
    println(z)

    // Поразрядные операции
    // shl: сдвиг битов числа со знаком влево
    val zl = 3 shl 2 // z = 11 << 2 = 1100
    println(zl)      // z = 12

    // shr: сдвиг битов числа со знаком вправо
    val zr = 12 shr 2 // z = 1100 >> 2 = 11
    println(zr)       // z = 3

    // ushr: сдвиг битов беззнакового числа вправо
    val uzr = 12 ushr 2     // z = 1100 >> 2 = 11
    println(uzr)          // z = 3

    // and: побитовая операция AND (логическое умножение или конъюнкция).
    // Эта операция сравнивает соответствующие разряды двух чисел и возвращает единицу,
    // если эти разряды обоих чисел равны 1. Иначе возвращает 0.
    val x1 = 5   // 101
    val y1 = 6   // 110
    val z1 = x1 and y1     // z = 101 & 110 = 100
    println(z1)          // z = 4

    val d1 = 0b101 and 0b110
    println(d1)          // d = 4

    // or: побитовая операция OR (логическое сложение или дизъюнкция).
    // Эта операция сравнивают два соответствуюших разряда обоих чисел и возвращает 1,
    // если хотя бы один разряд равен 1. Если оба разряда равны 0, то возвращается 0.
    val x2 = 5   // 101
    val y2 = 6   // 110
    val z2 = x2 or y2     // z = 101 | 110 = 111
    println(z2)         // z = 7

    val d2 = 0b101 or 0b110
    println(d2)          // d = 7

    // xor: побитовая операция XOR. Сравнивает два разряда и возвращает 1,
    // если один из разрядов равен 1, а другой равен 0. Если оба разряда равны, то возвращается 0.
    val x3 = 5   // 101
    val y3 = 6   // 110
    val z3 = x3 xor y3     // z = 101 ^ 110 = 011
    println(z3)         // z = 3

    val d3 = 0b101 xor 0b110
    println(d3)          // d = 3

    // inv: логическое отрицание или инверсия - инвертирует биты числа
    val b = 11  // 1011
    val c = b.inv()
    println(c)      // -12
}
